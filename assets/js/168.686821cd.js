(window.webpackJsonp=window.webpackJsonp||[]).push([[168],{603:function(e,r,v){"use strict";v.r(r);var t=v(16),_=Object(t.a)({},(function(){var e=this,r=e.$createElement,v=e._self._c||r;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"一、spring-mvc"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#一、spring-mvc"}},[e._v("#")]),e._v(" 一、Spring MVC")]),e._v(" "),v("p",[e._v("Spring是apache推出的开源框架，整合了springmvc框架及spring框架其他部分,是一种轻量级的、基于MVC的 Web应用框架  ,使用springMVC+Mybatis可以实现SSH几乎所有的功能，相对SSH更加的轻量，灵活。")]),e._v(" "),v("h2",{attrs:{id:"_1、springmvc优势"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1、springmvc优势"}},[e._v("#")]),e._v(" 1、SpringMVC优势")]),e._v(" "),v("ul",[v("li",[v("p",[e._v("清晰的角色划分：")]),e._v(" "),v("ul",[v("li",[v("strong",[e._v("前端控制器（DispatcherServlet）;")])]),e._v(" "),v("li",[v("strong",[e._v("请求到处理器映射（HandlerMapping）;")])]),e._v(" "),v("li",[v("strong",[e._v("处理器适配器（HandlerAdapter）;")])]),e._v(" "),v("li",[v("strong",[e._v("视图解析器（ViewResolver）;")])]),e._v(" "),v("li",[v("strong",[e._v("处理器或页面控制器（Controller）;")])]),e._v(" "),v("li",[v("strong",[e._v("验证器（Validator）")])]),e._v(" "),v("li",[v("strong",[e._v("命令对象（Command 请求参数绑定到的对象就叫命令对象）;")])]),e._v(" "),v("li",[v("strong",[e._v("表单对象（Form Object 提供给表单展示和提交到的对象就叫表单对象）")])])])]),e._v(" "),v("li",[v("p",[e._v("分工明细，拓展相当灵活和Spring无缝集成，这个是其他框架不具备的,本身spring中包含了springMVC")])]),e._v(" "),v("li",[v("p",[e._v("功能强大的数据验证、格式化。")])]),e._v(" "),v("li",[v("p",[v("strong",[e._v("支持REST风格")]),e._v("(所有的url都可当成资源)软件的架构风格")])]),e._v(" "),v("li",[v("p",[v("strong",[e._v("基于注解的零配置")]),e._v(",在以前时候，Struts2中需要配置大量的xml文件;但是其实后来struts2也支持注解咯.")])])]),e._v(" "),v("h2",{attrs:{id:"_2、mvc说明"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2、mvc说明"}},[e._v("#")]),e._v(" 2、MVC说明")]),e._v(" "),v("ul",[v("li",[e._v("Model（模型）：")])]),e._v(" "),v("p",[e._v("数据模型，提供要展示的数据，因此包含数据和行为，可以认为是领域模型或JavaBean组件（包含数据和行为），不过现在一般都分离开来：Value Object（数据） 和 服务层service（业务行为）,也就是模型提供了模型数据查询和模型数据的状态更新等功能，包括数据和业务。")]),e._v(" "),v("ul",[v("li",[e._v("View（视图）：")])]),e._v(" "),v("p",[e._v("负责进行模型的展示，一般就是我们见到的用户界面，展示给用户的东西，同时可以收集用户的请求数据，传递给控制器.设计的时候可以借助外部的一些框架.技术可以是html+js,jsp,freemarker，其他的前端技术等")]),e._v(" "),v("ul",[v("li",[e._v("Controller（控制器）：")])]),e._v(" "),v("p",[e._v("接收用户请求，调用给模型进行处理（状态改变），处理完毕后把返回的模型数据返回给视图，由视图负责展示。 也就是说控制器做了个调度员的工作。核心部分。")]),e._v(" "),v("h2",{attrs:{id:"_3、springmvc控制器说明"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3、springmvc控制器说明"}},[e._v("#")]),e._v(" 3、SpringMVC控制器说明")]),e._v(" "),v("p",[e._v("​\t\t框架的Controller 层要完成的主要工作：封装web 请求为一个数据对象、调用业务逻辑层来处理数据对象、返回处理数据结果及相应的视图给用户。")]),e._v(" "),v("p",[e._v("​\t\tSpringMVC中 Controller 层框架的核心是 "),v("strong",[e._v("DispatcherServlet")]),e._v("，它的作用是将请求分发给不同的后端处理器，也即 使用了一种被称为Front Controller 的模式(后面对此模式有简要说明)。 Spring 的C 层框架使用了后端控制器来、映射处理器和视图解析器来共同完成C 层框架的主要工作。并且spring 的C 层框架还真正地把业务层处理的数据结果和相应的视图拼成一个对象，即我们后面会经常用到的ModelAndView 对象。")]),e._v(" "),v("p",[e._v("​\t\tSpring MVC是结构最清晰的MVC Model 2实现。它的控制器，称做Controller；Controller接收request, response参数，然后返回ModelAndView类型的对象（其中的Model不是Object类型，而是Map类型）。但在其它的Web Framework中，Action返回值一般都只是一个View Name；Model则需要通过其它的途径（如request.attribute，Context参数，或Action本身的属性数据）传递上去。")]),e._v(" "),v("h2",{attrs:{id:"_4、springmvc请求处理流程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4、springmvc请求处理流程"}},[e._v("#")]),e._v(" 4、SpringMVC请求处理流程")]),e._v(" "),v("p",[v("img",{attrs:{src:"https://singerwimg-1300001977.cos.accelerate.myqcloud.com/2021/08/17/3ed0e251bbb80.png",alt:""}})]),e._v(" "),v("p",[v("strong",[e._v("请求过程要会描述，按照课堂讲的内容来组织自己的语言，作为面试的重点关注部分.")])]),e._v(" "),v("ol",[v("li",[v("strong",[e._v("外部请求,找前端控制器(DispatcherServlet)")])]),e._v(" "),v("li",[v("strong",[e._v("前端控制器根据配置信息,查找实际的控制器(sayHello) .可以通过代理请求来完成(实际上比较复杂 前端的解析器,前端的代理适配器等等)")])]),e._v(" "),v("li",[v("strong",[e._v("找到真正的控制器(后端控制器),处理请求")])]),e._v(" "),v("li",[v("strong",[e._v("创建model;功能是将数据返回给视图,数据可能是从业务一侧获取的结果")])]),e._v(" "),v("li",[v("strong",[e._v("携带数据传递给前端控制器")])]),e._v(" "),v("li",[v("strong",[e._v("前端控制器将结果传递给视图,渲染视图")])]),e._v(" "),v("li",[v("strong",[e._v("返回结果给请求一侧(浏览器一侧 )")])])]),e._v(" "),v("p",[v("img",{attrs:{src:"https://singerwimg-1300001977.cos.accelerate.myqcloud.com/2021/08/18/ff54054d80432.png",alt:""}})]),e._v(" "),v("ol",[v("li",[v("strong",[e._v("向服务器发送 HTTP 请求，请求被前端控制器 "),v("code",[e._v("DispatcherServlet")]),e._v(" 捕获。")])]),e._v(" "),v("li",[v("strong",[v("code",[e._v("DispatcherServlet")]),e._v(" 根据 -servlet.xml 中的配置对请求的 URL 进行解析，得到请求资源标识符（URI）。然后根据该 URI，调用 "),v("code",[e._v("HandlerMapping")]),e._v(" 获得该 Handler 配置的所有相关的对象（包括 Handler 对象以及 Handler 对象对应的拦截器），最后以"),v("code",[e._v("HandlerExecutionChain")]),e._v(" 对象的形式返回。")])]),e._v(" "),v("li",[v("strong",[v("code",[e._v("DispatcherServlet")]),e._v(" 根据获得的"),v("code",[e._v("Handler")]),e._v("，选择一个合适的 "),v("code",[e._v("HandlerAdapter")]),e._v("。（附注：如果成功获得"),v("code",[e._v("HandlerAdapter")]),e._v("后，此时将开始执行拦截器的 preHandler(...)方法）。")])]),e._v(" "),v("li",[v("strong",[e._v("提取Request中的模型数据，填充Handler入参，开始执行Handler（Controller)。 在填充Handler的入参过程中，根据你的配置，Spring 将帮你做一些额外的工作：")]),e._v(" "),v("ul",[v("li",[v("strong",[e._v("HttpMessageConveter： 将请求消息（如 Json、xml 等数据）转换成一个对象，将对象转换为指定的响应信息。")])]),e._v(" "),v("li",[v("strong",[e._v("数据转换：对请求消息进行数据转换。如"),v("code",[e._v("String")]),e._v("转换成"),v("code",[e._v("Integer")]),e._v("、"),v("code",[e._v("Double")]),e._v("等。")])]),e._v(" "),v("li",[v("strong",[e._v("数据根式化：对请求消息进行数据格式化。 如将字符串转换成格式化数字或格式化日期等。")])]),e._v(" "),v("li",[v("strong",[e._v("数据验证： 验证数据的有效性（长度、格式等），验证结果存储到"),v("code",[e._v("BindingResult")]),e._v("或"),v("code",[e._v("Error")]),e._v("中。")])])])]),e._v(" "),v("li",[v("strong",[e._v("Handler(Controller)执行完成后，向 "),v("code",[e._v("DispatcherServlet")]),e._v(" 返回一个 "),v("code",[e._v("ModelAndView")]),e._v(" 对象；")])]),e._v(" "),v("li",[v("strong",[e._v("根据返回的"),v("code",[e._v("ModelAndView")]),e._v("，选择一个适合的 "),v("code",[e._v("ViewResolver")]),e._v("（必须是已经注册到 Spring 容器中的"),v("code",[e._v("ViewResolver")]),e._v(")返回给"),v("code",[e._v("DispatcherServlet")]),e._v("。")])]),e._v(" "),v("li",[v("strong",[v("code",[e._v("ViewResolver")]),e._v(" 结合"),v("code",[e._v("Model")]),e._v("和"),v("code",[e._v("View")]),e._v("，来渲染视图。")])]),e._v(" "),v("li",[v("strong",[e._v("视图负责将渲染结果返回给客户端。")])])])])}),[],!1,null,null,null);r.default=_.exports}}]);