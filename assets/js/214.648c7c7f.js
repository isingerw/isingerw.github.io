(window.webpackJsonp=window.webpackJsonp||[]).push([[214],{645:function(t,s,a){"use strict";a.r(s);var n=a(16),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"mybatis-plus-主键生成策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mybatis-plus-主键生成策略"}},[t._v("#")]),t._v(" MyBatis-Plus—主键生成策略")]),t._v(" "),a("p",[t._v("MyBatis-Plus 数据库插入时的id的默认值为：全局的唯一id")]),t._v(" "),a("h2",{attrs:{id:"_1、id-worker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、id-worker"}},[t._v("#")]),t._v(" 1、ID_WORKER")]),t._v(" "),a("p",[t._v("默认 ID_WORKER 全局唯一id")]),t._v(" "),a("p",[t._v("分布式系统唯一id生成：https://www.cnblogs.com/haoxinyue/p/5208136.html")]),t._v(" "),a("p",[t._v("snowflake是Twitter开源的分布式ID生成算法，结果是一个long型的ID。其核心思想是：使用41bit作为\n毫秒数，10bit作为机器的ID（5个bit是数据中心，5个bit的机器ID），12bit作为毫秒内的流水号（意味\n着每个节点在每毫秒可以产生 4096 个 ID），最后还有一个符号位，永远是0。可以保证几乎全球唯\n一！")]),t._v(" "),a("h2",{attrs:{id:"_2、主键自增"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、主键自增"}},[t._v("#")]),t._v(" 2、主键自增")]),t._v(" "),a("p",[t._v("我们需要配置主键自增：")]),t._v(" "),a("ul",[a("li",[t._v("实体类字段上 @TableId(type = IdType.AUTO)")]),t._v(" "),a("li",[t._v("数据库字段一定要是自增！")])]),t._v(" "),a("p",[t._v("再次测试插入即可！这时主键就是自增的状态。")]),t._v(" "),a("h2",{attrs:{id:"其与类型的源码解释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其与类型的源码解释"}},[t._v("#")]),t._v(" 其与类型的源码解释")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IdType")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("AUTO")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数据库id自增")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NONE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 未设置主键")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("INPUT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 手动输入")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ID_WORKER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认的全局唯一id")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("UUID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 全局唯一id uuid")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ID_WORKER_STR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//ID_WORKER 字符串表示法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);